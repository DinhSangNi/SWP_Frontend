import axios from "axios";

// C·∫•u h√¨nh Axios instance
const API = axios.create({
    baseURL: "https://coursesystem.azurewebsites.net",
    withCredentials: true, // N·∫øu API d√πng cookies ƒë·ªÉ auth
    headers: {
        "Content-Type": "application/x-www-form-urlencoded",
    },
});

// Middleware: T·ª± ƒë·ªông ƒë√≠nh k√®m token v√†o headers cho m·ªçi request
API.interceptors.request.use(
    (config) => {
        const token = localStorage.getItem("token");
        if (token) {
            config.headers.Authorization = `Bearer ${token}`;
        }
        return config;
    },
    (error) => Promise.reject(error)
);

// Middleware: X·ª≠ l√Ω l·ªói response, v√≠ d·ª• t·ª± ƒë·ªông refresh token (n·∫øu API h·ªó tr·ª£)
API.interceptors.response.use(
    (response) => response,
    async (error) => {
        if (error.response?.status === 401) {
            console.warn(
                "Token h·∫øt h·∫°n ho·∫∑c kh√¥ng h·ª£p l·ªá, c√≥ th·ªÉ c·∫ßn ƒëƒÉng nh·∫≠p l·∫°i!"
            );
            // G·ªçi API refresh token n·∫øu c√≥
        }
        return Promise.reject(error.response?.data || error.message);
    }
);

// üü¢ API L·∫•y t·∫•t c·∫£ ng∆∞·ªùi d√πng
export const getAllUser = async () => {
    try {
        const response = await API.get("/User/all-users");
        // console.log("üìå getAllUser response:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng:", error);
        throw error;
    }
};

// API l·∫•y chi ti·∫øt ng∆∞·ªùi d√πng
export const getUserById = async (userId: string) => {
    try {
        const response = await API.get(`/User/${userId}`);
        console.log("‚úÖ L·∫•y th√¥ng tin ng∆∞·ªùi d√πng th√†nh c√¥ng:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", error);
        throw error;
    }
};

// üü¢ API Th√™m ng∆∞·ªùi d√πng
export const addUser = async (userData: any) => {
    try {
        const response = await API.post("/User/add", userData);
        console.log("‚úÖ Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi th√™m ng∆∞·ªùi d√πng:", error);
        throw error;
    }
};

// üü¢ API X√≥a ng∆∞·ªùi d√πng
export const deleteUser = async (userId: string) => {
    try {
        const response = await API.delete(`/User/delete/${userId}`);
        console.log(`‚úÖ X√≥a ng∆∞·ªùi d√πng ID ${userId} th√†nh c√¥ng`);
        return response.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi x√≥a ng∆∞·ªùi d√πng:", error);
        throw error;
    }
};

// üü¢ API C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng
export const updateUser = async (userId: string, updatedData: any) => {
    try {
        const response = await API.put(
            `/User/update-status/${userId}`,
            updatedData
        );
        console.log(`‚úÖ C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng ID ${userId} th√†nh c√¥ng`);
        return response.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng:", error);
        throw error;
    }
};
